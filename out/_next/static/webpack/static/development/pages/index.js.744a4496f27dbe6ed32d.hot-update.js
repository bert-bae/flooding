webpackHotUpdate("static/development/pages/index.js",{

/***/ "./constants/elevation-indicators.tsx":
/*!********************************************!*\
  !*** ./constants/elevation-indicators.tsx ***!
  \********************************************/
/*! exports provided: elevationIndicators */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elevationIndicators\", function() { return elevationIndicators; });\nvar elevationIndicators = [{\n  numerical: 10,\n  text: 'ten'\n}, {\n  numerical: 20,\n  text: 'twenty'\n}, {\n  numerical: 30,\n  text: 'thirty'\n}, {\n  numerical: 40,\n  text: 'forty'\n}, {\n  numerical: 50,\n  text: 'fifty'\n}, {\n  numerical: 60,\n  text: 'sixty'\n}, {\n  numerical: 70,\n  text: 'seventy'\n}, {\n  numerical: 80,\n  text: 'eighty'\n}, {\n  numerical: 90,\n  text: 'ninty'\n}, {\n  numerical: 100,\n  text: 'one-hundred'\n}];\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports_1 = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports_1, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports_1)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports_1;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports_1)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb25zdGFudHMvZWxldmF0aW9uLWluZGljYXRvcnMudHN4PzYwMGYiXSwibmFtZXMiOlsiZWxldmF0aW9uSW5kaWNhdG9ycyIsIm51bWVyaWNhbCIsInRleHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBTyxJQUFNQSxtQkFBbUIsR0FBRyxDQUNqQztBQUNFQyxXQUFTLEVBQUUsRUFEYjtBQUVFQyxNQUFJLEVBQUU7QUFGUixDQURpQyxFQUtqQztBQUNFRCxXQUFTLEVBQUUsRUFEYjtBQUVFQyxNQUFJLEVBQUU7QUFGUixDQUxpQyxFQVNqQztBQUNFRCxXQUFTLEVBQUUsRUFEYjtBQUVFQyxNQUFJLEVBQUU7QUFGUixDQVRpQyxFQWFqQztBQUNFRCxXQUFTLEVBQUUsRUFEYjtBQUVFQyxNQUFJLEVBQUU7QUFGUixDQWJpQyxFQWlCakM7QUFDRUQsV0FBUyxFQUFFLEVBRGI7QUFFRUMsTUFBSSxFQUFFO0FBRlIsQ0FqQmlDLEVBcUJqQztBQUNFRCxXQUFTLEVBQUUsRUFEYjtBQUVFQyxNQUFJLEVBQUU7QUFGUixDQXJCaUMsRUF5QmpDO0FBQ0VELFdBQVMsRUFBRSxFQURiO0FBRUVDLE1BQUksRUFBRTtBQUZSLENBekJpQyxFQTZCakM7QUFDRUQsV0FBUyxFQUFFLEVBRGI7QUFFRUMsTUFBSSxFQUFFO0FBRlIsQ0E3QmlDLEVBaUNqQztBQUNFRCxXQUFTLEVBQUUsRUFEYjtBQUVFQyxNQUFJLEVBQUU7QUFGUixDQWpDaUMsRUFxQ2pDO0FBQ0VELFdBQVMsRUFBRSxHQURiO0FBRUVDLE1BQUksRUFBRTtBQUZSLENBckNpQyxDQUE1QiIsImZpbGUiOiIuL2NvbnN0YW50cy9lbGV2YXRpb24taW5kaWNhdG9ycy50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZWxldmF0aW9uSW5kaWNhdG9ycyA9IFtcbiAge1xuICAgIG51bWVyaWNhbDogMTAsXG4gICAgdGV4dDogJ3RlbicsXG4gIH0sXG4gIHtcbiAgICBudW1lcmljYWw6IDIwLFxuICAgIHRleHQ6ICd0d2VudHknLFxuICB9LFxuICB7XG4gICAgbnVtZXJpY2FsOiAzMCxcbiAgICB0ZXh0OiAndGhpcnR5JyxcbiAgfSxcbiAge1xuICAgIG51bWVyaWNhbDogNDAsXG4gICAgdGV4dDogJ2ZvcnR5JyxcbiAgfSxcbiAge1xuICAgIG51bWVyaWNhbDogNTAsXG4gICAgdGV4dDogJ2ZpZnR5JyxcbiAgfSxcbiAge1xuICAgIG51bWVyaWNhbDogNjAsXG4gICAgdGV4dDogJ3NpeHR5JyxcbiAgfSxcbiAge1xuICAgIG51bWVyaWNhbDogNzAsXG4gICAgdGV4dDogJ3NldmVudHknLFxuICB9LFxuICB7XG4gICAgbnVtZXJpY2FsOiA4MCxcbiAgICB0ZXh0OiAnZWlnaHR5JyxcbiAgfSxcbiAge1xuICAgIG51bWVyaWNhbDogOTAsXG4gICAgdGV4dDogJ25pbnR5JyxcbiAgfSxcbiAge1xuICAgIG51bWVyaWNhbDogMTAwLFxuICAgIHRleHQ6ICdvbmUtaHVuZHJlZCcsXG4gIH0sXG5dO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./constants/elevation-indicators.tsx\n");

/***/ })

})